<?xml version="1.0" encoding="UTF-8"?>
<!-- Copyright (C) 2012-13 MINHAP, Gobierno de EspaÃ±a
   This program is licensed and may be used, modified and redistributed under the terms
   of the European Public License (EUPL), either version 1.1 or (at your
   option) any later version as soon as they are approved by the European Commission.
   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
   or implied. See the License for the specific language governing permissions and
   more details.
   You should have received a copy of the EUPL1.1 license
   along with this program; if not, you may find it at
   http://joinup.ec.europa.eu/software/page/eupl/licence-eupl -->
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:sec="http://www.springframework.org/schema/security" xmlns:jaxws="http://cxf.apache.org/jaxws" xmlns:context="http://www.springframework.org/schema/context" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:util="http://www.springframework.org/schema/util" xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
						http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
                        http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-4.0.xsd
                        http://cxf.apache.org/jaxws http://cxf.apache.org/schemas/jaxws.xsd
                        http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.0.xsd"> 
    <context:annotation-config /> 
    <context:component-scan base-package="es.gob.aapp.csvstorage, es.gob.aapp.eeutil.bigDataTransfer" /> 
    <import resource="classpath:META-INF/cxf/cxf.xml" /> 
    <import resource="classpath:META-INF/cxf/cxf-servlet.xml" /> 
    <import resource="classpath:/bigDataTransfer-context.xml" /> 
    <context:property-placeholder location="file:${csvstorage.config.path}/ws-security.properties" ignore-unresolvable="true" /> 
    <util:properties id="loadTablesProperties" location="classpath:loadTables.properties" /> 
    <bean id="repositoryProperties" class="org.springframework.beans.factory.config.PropertiesFactoryBean"> 
        <property name="locations"> 
            <list> 
                <value>
                    file:${csvstorage.config.path}/csvstorage.properties
                </value> 
                <value>
                    file:${csvstorage.config.path}/repository.properties
                </value> 
            </list> 
        </property> 
    </bean> 
    <bean id="applicationUserDetailService" class="es.gob.aapp.csvstorage.services.business.security.ApplicationUserDetailServiceImpl" /> 
    <bean id="ApplicationBusinessService" class="es.gob.aapp.csvstorage.services.business.application.impl.ApplicationBusinessServiceImpl" /> 
    <bean id="customUserTokenValidator" class="es.gob.aapp.csvstorage.webservices.security.wss4j.CustomUserTokenValidator" /> 
    <sec:authentication-manager alias="authenticationManager"> 
        <sec:authentication-provider user-service-ref="applicationUserDetailService"> 
            <sec:password-encoder hash="sha-256" /> 
        </sec:authentication-provider> 
    </sec:authentication-manager> 
    <sec:authentication-manager id="wssAutenticationManager"> 
        <sec:authentication-provider user-service-ref="applicationUserDetailService"> 
        </sec:authentication-provider> 
    </sec:authentication-manager> 
    <bean id="serverAuthenticationCallback" class="es.gob.aapp.csvstorage.webservices.security.wss4j.ServerAuthenticationCallback" /> 
    <bean id="userTokenAuthenticationInterceptor" class="es.gob.aapp.csvstorage.webservices.security.interceptor.UserTokenAuthenticationInterceptor"> 
        <property name="applicationBusinessService" ref="ApplicationBusinessService" /> 
        <property name="authenticationManager" ref="wssAutenticationManager" /> 
    </bean> 
    <bean id="certificateAuthenticationInterceptor" class="es.gob.aapp.csvstorage.webservices.security.interceptor.CertificateAuthenticationInterceptor"> 
        <property name="applicationBusinessService" ref="ApplicationBusinessService" /> 
        <property name="authenticationManager" ref="wssAutenticationManager" /> 
    </bean> 
    <!-- Intecerceptors logging --> 
    <bean id="abstractLoggingInterceptor" abstract="true"> 
        <property name="prettyLogging" value="true" /> 
        <property name="limit" value="-1"></property> 
    </bean> 
    <bean id="loggingInInterceptor" class="org.apache.cxf.interceptor.LoggingInInterceptor" parent="abstractLoggingInterceptor" /> 
    <bean id="customLoggingInInterceptor" class="es.gob.aapp.csvstorage.webservices.security.interceptor.CustomLogginInInterceptor" parent="loggingInInterceptor" /> 
    <!-- 	<bean id="loggingOutInterceptor" class="org.apache.cxf.interceptor.LoggingOutInterceptor" parent="abstractLoggingInterceptor"/> --> 
    <bean id="wSS4JUserTokenInInterceptor" class="org.apache.cxf.ws.security.wss4j.WSS4JInInterceptor"> 
        <constructor-arg> 
            <map> 
                <entry value="UsernameToken"> 
                    <key> 
                        <util:constant static-field="org.apache.wss4j.dom.handler.WSHandlerConstants.ACTION" /> 
                    </key> 
                </entry> 
                <entry value="PasswordText"> 
                    <key> 
                        <util:constant static-field="org.apache.wss4j.dom.handler.WSHandlerConstants.PASSWORD_TYPE" /> 
                    </key> 
                </entry> 
                <entry key="passwordCallbackRef"> 
                    <ref bean="serverAuthenticationCallback" /> 
                </entry> 
            </map> 
        </constructor-arg> 
    </bean> 
    <util:properties id="cryptoProperties"> 
        <prop key="schema-validation-enabled">
            ${schema-validation-enabled}
        </prop> 
        <prop key="ws-security.enable.nonce.cache">
            ${ws-security.enable.nonce.cache}
        </prop> 
        <prop key="ws-security.enable.timestamp.cache">
            ${ws-security.enable.timestamp.cache}
        </prop> 
        <prop key="org.apache.wss4j.crypto.provider">
            ${org.apache.wss4j.crypto.provider}
        </prop> 
        <prop key="org.apache.wss4j.crypto.merlin.truststore.file">
            ${org.apache.wss4j.crypto.merlin.truststore.file}
        </prop> 
        <prop key="org.apache.wss4j.crypto.merlin.truststore.password">
            ${org.apache.wss4j.crypto.merlin.truststore.password}
        </prop> 
        <prop key="org.apache.wss4j.crypto.merlin.truststore.type">
            ${org.apache.wss4j.crypto.merlin.truststore.type}
        </prop> 
    </util:properties> 
    <bean id="wSS4JCertificateInInterceptor" class="es.gob.aapp.csvstorage.webservices.security.interceptor.CustomWSS4JInInterceptor"> 
        <constructor-arg> 
            <map> 
                <entry value="Signature"> 
                    <key> 
                        <util:constant static-field="org.apache.wss4j.dom.handler.WSHandlerConstants.ACTION" /> 
                    </key> 
                </entry> 
            </map> 
        </constructor-arg> 
        <property name="cryptoProperties" ref="cryptoProperties"></property> 
    </bean> 
    <!-- 	csvDocumentService --> 
    <jaxws:endpoint id="csvDocumentService" address="/CSVDocumentService"> 
        <jaxws:properties> 
            <entry key="schema-validation-enabled" value="${schema-validation-enabled}" /> 
        </jaxws:properties> 
        <jaxws:inInterceptors> 
            <bean class="es.gob.aapp.csvstorage.webservices.security.interceptor.WebServiceAuthenticationInterceptor"> 
                <property name="authenticationManager" ref="authenticationManager" /> 
            </bean> 
        </jaxws:inInterceptors> 
        <jaxws:implementor> 
            <bean class="es.gob.aapp.csvstorage.webservices.document.impl.CSVDocumentServiceImpl"> 
            </bean> 
        </jaxws:implementor> 
    </jaxws:endpoint> 
    <jaxws:endpoint id="csvDocumentWSService" address="/CSVDocumentWSService"> 
        <jaxws:properties> 
            <entry key="schema-validation-enabled" value="${schema-validation-enabled}" /> 
            <entry key="ws-security.enable.nonce.cache" value="${ws-security.enable.nonce.cache}" /> 
            <entry key="ws-security.enable.timestamp.cache" value="${ws-security.enable.timestamp.cache}" /> 
            <entry key="ws-security.ut.validator"> 
                <ref bean="customUserTokenValidator" /> 
            </entry> 
        </jaxws:properties> 
        <jaxws:inInterceptors> 
            <ref bean="wSS4JUserTokenInInterceptor" /> 
            <ref bean="userTokenAuthenticationInterceptor" /> 
        </jaxws:inInterceptors> 
        <jaxws:implementor> 
            <bean class="es.gob.aapp.csvstorage.webservices.document.impl.CSVDocumentWSServiceImpl"> 
            </bean> 
        </jaxws:implementor> 
    </jaxws:endpoint> 
    <jaxws:endpoint id="csvDocumentCertificateService" address="/CSVDocumentCertificateService"> 
        <jaxws:properties> 
            <entry key="schema-validation-enabled" value="${schema-validation-enabled}" /> 
            <entry key="ws-security.enable.nonce.cache" value="${ws-security.enable.nonce.cache}" /> 
            <entry key="ws-security.enable.timestamp.cache" value="${ws-security.enable.timestamp.cache}" /> 
        </jaxws:properties> 
        <jaxws:inInterceptors> 
            <ref bean="wSS4JCertificateInInterceptor" /> 
            <ref bean="certificateAuthenticationInterceptor" /> 
        </jaxws:inInterceptors> 
        <jaxws:implementor> 
            <bean class="es.gob.aapp.csvstorage.webservices.document.impl.CSVDocumentCertificateServiceImpl"> 
            </bean> 
        </jaxws:implementor> 
    </jaxws:endpoint> 
    <!-- 	csvDocumentMtomService --> 
    <jaxws:endpoint id="csvDocumentMtomService" address="/CSVDocumentMtomService"> 
        <jaxws:properties> 
            <entry key="schema-validation-enabled" value="${schema-validation-enabled}" /> 
        </jaxws:properties> 
        <jaxws:inInterceptors> 
            <bean class="es.gob.aapp.csvstorage.webservices.security.interceptor.WebServiceAuthenticationInterceptor"> 
                <property name="authenticationManager" ref="authenticationManager" /> 
            </bean> 
        </jaxws:inInterceptors> 
        <jaxws:implementor> 
            <bean class="es.gob.aapp.csvstorage.webservices.documentmtom.impl.CSVDocumentMtomServiceImpl"> 
            </bean> 
        </jaxws:implementor> 
    </jaxws:endpoint> 
    <jaxws:endpoint id="csvDocumentWSMtomService" address="/CSVDocumentWSMtomService"> 
        <jaxws:properties> 
            <entry key="schema-validation-enabled" value="${schema-validation-enabled}" /> 
            <entry key="ws-security.enable.nonce.cache" value="${ws-security.enable.nonce.cache}" /> 
            <entry key="ws-security.enable.timestamp.cache" value="${ws-security.enable.timestamp.cache}" /> 
            <entry key="ws-security.ut.validator"> 
                <ref bean="customUserTokenValidator" /> 
            </entry> 
        </jaxws:properties> 
        <jaxws:inInterceptors> 
            <ref bean="wSS4JUserTokenInInterceptor" /> 
            <ref bean="userTokenAuthenticationInterceptor" /> 
        </jaxws:inInterceptors> 
        <jaxws:implementor> 
            <bean class="es.gob.aapp.csvstorage.webservices.documentmtom.impl.CSVDocumentWSMtomServiceImpl"> 
            </bean> 
        </jaxws:implementor> 
    </jaxws:endpoint> 
    <jaxws:endpoint id="csvDocumentCertificateMtomService" address="/CSVDocumentCertificateMtomService"> 
        <jaxws:properties> 
            <entry key="schema-validation-enabled" value="${schema-validation-enabled}" /> 
            <entry key="ws-security.enable.nonce.cache" value="${ws-security.enable.nonce.cache}" /> 
            <entry key="ws-security.enable.timestamp.cache" value="${ws-security.enable.timestamp.cache}" /> 
        </jaxws:properties> 
        <jaxws:inInterceptors> 
            <ref bean="wSS4JCertificateInInterceptor" /> 
            <ref bean="certificateAuthenticationInterceptor" /> 
        </jaxws:inInterceptors> 
        <jaxws:implementor> 
            <bean class="es.gob.aapp.csvstorage.webservices.documentmtom.impl.CSVDocumentCertificateMtomServiceImpl"> 
            </bean> 
        </jaxws:implementor> 
    </jaxws:endpoint> 
    <!-- 	Servicio CSVQueryDocumentService de integraciÃ³n como Productor de CSV BROKER --> 
    <jaxws:endpoint id="CSVQueryDocumentService" address="/CSVQueryDocumentService"> 
        <jaxws:properties> 
            <entry key="schema-validation-enabled" value="${schema-validation-enabled}" /> 
        </jaxws:properties> 
        <jaxws:inInterceptors> 
            <bean class="es.gob.aapp.csvstorage.webservices.security.interceptor.WebServiceAuthenticationInterceptor"> 
                <property name="authenticationManager" ref="authenticationManager" /> 
            </bean> 
            <!-- 			<ref bean="customLoggingInInterceptor"/> --> 
        </jaxws:inInterceptors> 
        <jaxws:implementor> 
            <bean class="es.gob.aapp.csvbroker.webservices.querydocument.impl.CSVQueryDocumentServiceImpl"> 
            </bean> 
        </jaxws:implementor> 
    </jaxws:endpoint> 
    <jaxws:endpoint id="CSVQueryDocumentWSService" address="/CSVQueryDocumentWSService"> 
        <jaxws:properties> 
            <entry key="schema-validation-enabled" value="${schema-validation-enabled}" /> 
            <entry key="ws-security.enable.nonce.cache" value="${ws-security.enable.nonce.cache}" /> 
            <entry key="ws-security.enable.timestamp.cache" value="${ws-security.enable.timestamp.cache}" /> 
            <entry key="ws-security.ut.validator"> 
                <ref bean="customUserTokenValidator" /> 
            </entry> 
        </jaxws:properties> 
        <jaxws:inInterceptors> 
            <!-- 			<ref bean="customLoggingInInterceptor"/> --> 
            <ref bean="wSS4JUserTokenInInterceptor" /> 
            <ref bean="userTokenAuthenticationInterceptor" /> 
        </jaxws:inInterceptors> 
        <jaxws:implementor> 
            <bean class="es.gob.aapp.csvbroker.webservices.querydocument.impl.CSVQueryDocumentWSServiceImpl"> 
            </bean> 
        </jaxws:implementor> 
    </jaxws:endpoint> 
    <jaxws:endpoint id="CSVQueryDocumentCertificateService" address="/CSVQueryDocumentCertificateService"> 
        <jaxws:properties> 
            <entry key="schema-validation-enabled" value="${schema-validation-enabled}" /> 
            <entry key="ws-security.enable.nonce.cache" value="${ws-security.enable.nonce.cache}" /> 
            <entry key="ws-security.enable.timestamp.cache" value="${ws-security.enable.timestamp.cache}" /> 
        </jaxws:properties> 
        <jaxws:inInterceptors> 
            <!-- 			<ref bean="customLoggingInInterceptor"/> --> 
            <ref bean="wSS4JCertificateInInterceptor" /> 
            <ref bean="certificateAuthenticationInterceptor" /> 
        </jaxws:inInterceptors> 
        <jaxws:implementor> 
            <bean class="es.gob.aapp.csvbroker.webservices.querydocument.impl.CSVQueryDocumentCertificateServiceImpl"> 
            </bean> 
        </jaxws:implementor> 
    </jaxws:endpoint> 
    <!-- 	AdminService --> 
    <jaxws:endpoint id="AdminService" address="/AdminService"> 
        <jaxws:properties> 
            <entry key="schema-validation-enabled" value="${schema-validation-enabled}" /> 
        </jaxws:properties> 
        <jaxws:inInterceptors> 
            <bean class="es.gob.aapp.csvstorage.webservices.security.interceptor.WebServiceAuthenticationInterceptor"> 
                <property name="authenticationManager" ref="authenticationManager" /> 
            </bean> 
        </jaxws:inInterceptors> 
        <jaxws:implementor> 
            <bean class="es.gob.aapp.csvstorage.webservices.administration.impl.AdminServiceImpl"> 
            </bean> 
        </jaxws:implementor> 
    </jaxws:endpoint> 
    <jaxws:endpoint id="AdminWSService" address="/AdminWSService"> 
        <jaxws:properties> 
            <entry key="schema-validation-enabled" value="${schema-validation-enabled}" /> 
            <entry key="ws-security.enable.nonce.cache" value="${ws-security.enable.nonce.cache}" /> 
            <entry key="ws-security.enable.timestamp.cache" value="${ws-security.enable.timestamp.cache}" /> 
        </jaxws:properties> 
        <jaxws:inInterceptors> 
            <ref bean="wSS4JCertificateInInterceptor" /> 
            <ref bean="certificateAuthenticationInterceptor" /> 
        </jaxws:inInterceptors> 
        <jaxws:implementor> 
            <bean class="es.gob.aapp.csvstorage.webservices.administration.impl.AdminWSServiceImpl"> 
            </bean> 
        </jaxws:implementor> 
    </jaxws:endpoint> 
    <jaxws:endpoint id="csvDocumentBigDataService" address="/CSVDocumentBigDataService"> 
        <jaxws:properties> 
            <entry key="schema-validation-enabled" value="${schema-validation-enabled}" /> 
        </jaxws:properties> 
        <jaxws:inInterceptors> 
            <bean class="es.gob.aapp.csvstorage.webservices.security.interceptor.WebServiceAuthenticationInterceptor"> 
                <property name="authenticationManager" ref="authenticationManager" /> 
            </bean> 
        </jaxws:inInterceptors> 
        <jaxws:implementor> 
            <bean class="es.gob.aapp.csvstorage.webservices.document.impl.CSVDocumentBigDataServiceImpl"> 
            </bean> 
        </jaxws:implementor> 
    </jaxws:endpoint> 
    <!-- 	prueba webservice para documentos de gran tamaÃ±o --> 
    <jaxws:endpoint id="bigFileStreamingService" address="/BIGFILEStreamingService"> 
        <jaxws:properties> 
            <entry key="schema-validation-enabled" value="${schema-validation-enabled}" /> 
            <entry key="mtom-enabled" value="true" /> 
        </jaxws:properties> 
        <jaxws:inInterceptors> 
            <bean class="es.gob.aapp.csvstorage.webservices.security.interceptor.WebServiceAuthenticationInterceptor"> 
                <property name="authenticationManager" ref="authenticationManager" /> 
            </bean> 
        </jaxws:inInterceptors> 
        <jaxws:implementor> 
            <bean class="es.gob.aapp.csvstorage.webservices.document.impl.BIGFILEStreamingServiceImpl"> 
            </bean> 
        </jaxws:implementor> 
    </jaxws:endpoint> 
</beans>
